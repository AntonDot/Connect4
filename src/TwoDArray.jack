class TwoDArray {
    field Array mainArray; // Основной массив
    field int rows, cols; // Количество строк и столбцов
    constructor TwoDArray new(int Arows, int Acols) {
        var int x, y;

        let rows = Arows; // Количество строк yi
        let cols = Acols; // Количество столбцов xi
        let mainArray = Array.new(cols*rows); // Создаем массив
        while (x< cols) { // Создаем массив
            
            while (y < rows) { // Создаем массив
                
                let mainArray[x*rows+(y)] = 2;
                let y = y + 1;
            }
            let x = x + 1;
            let y = 0; // Сбрасываем индекс строки
        }
        let x = 0; // Сбрасываем индекс столбца

        // Теперь mainArray заполнен значениями
        return this;
    }

    method void set(int x, int y, int value) {
        var int index;
        let index = x*rows+y;
        let mainArray[index] = value;
        return;
    }

    method int get(int x, int y) {
        var int index;
        let index = x*rows+y;
        return mainArray[index];
    }

    method int findWinner()
    {
        var int x,y;
        
        //if(isSimilar(x,y,x,y+3)) {
        //    do Output.printInt(mainArray[0]);
        //}
        // Проверяем вертикальные линии
        while (x < cols) {
            if(isSimilar(x,y,x,y+3) & ~(mainArray[x*rows+y] = 2)) {               
                return mainArray[x*rows+y];
            }
            if(isSimilar(x,y+1,x,y+1+3)& ~(mainArray[x*rows+y+1] = 2)) {               
                return mainArray[x*rows+y+1];
            }
            if(isSimilar(x,y+2,x,y+2+3)& ~(mainArray[x*rows+y+2] = 2)) {                
                return mainArray[x*rows+y+2];
            }
            let x = x + 1;           
        }
        
        // Проверяем горизонтальные линии
        let x = 0;
        let y = 0;
        while (y < rows) {
            if(isSimilar(x,y,x+3,y) & ~(mainArray[x*rows+y] = 2)) {                
                return mainArray[x*rows+y];
            }
            if(isSimilar(x+1,y,x+1+3,y) & ~(mainArray[x+1*rows+y] = 2)) {                
                return mainArray[x+1*rows+y];
            }
            if(isSimilar(x+2,y,x+2+3,y) & ~(mainArray[x+2*rows+y] = 2)) {                
                return mainArray[x+2*rows+y];
            }
            if(isSimilar(x+3,y,x+3+3,y) & ~(mainArray[x+3*rows+y] = 2)) {                
                return mainArray[x+3*rows+y];
            }
            let y = y + 1;            
        }
 
        // Проверяем диагональные линии
        let x = 0;
        let y = 0;
        while (x < (cols - 3)) {
            while (y < (rows-3)) {

                if(isSimilar(x,y,x+3,y+3) & ~(mainArray[x*rows+y] = 2)) {               
                    return mainArray[x*rows+y];
                }
                let y = y + 1;                
            }
            let y = 0;
            let x = x + 1;            
        }

        let x = 0;
        let y = rows-1;

        while (x < (cols - 3)) {
            while (y>2) {

                if(isSimilar(x,y,x+3,y-3) & ~(mainArray[x*rows+y] = 2)) {                    
                    return mainArray[x*rows+y];
                }
                let y = y - 1;                
            }
            let y = rows-1;
            let x = x + 1;            
        }

        return 2;
    }


    method boolean isSimilar(int x1, int y1, int x2, int y2) {
        if(y1=y2) {
            while(x1<x2) {
                if(~(mainArray[x1*rows+y1] = mainArray[x2*rows+y1])) {
                    return false;
                }
                let x1 = x1 + 1;
            }
            return true;
        }
        if(x1=x2) {
            while(y1<y2) {
                if(~(mainArray[x1*rows+y1] = mainArray[x1*rows+y2])) {
                    return false;
                }
                let y1 = y1 + 1;
            }
            return true;
        }
        while(y1<y2) {
            if(~(mainArray[x1*rows+y1] = mainArray[x2*rows+y2])) {
                return false;
            }
            let y1 = y1 + 1;
            let x1 = x1 + 1;
        }
        while(y2<y1) {
            if(~(mainArray[x1*rows+y1] = mainArray[x2*rows+y2])) {
                return false;
            }
            let y1 = y1 - 1;
            let x1 = x1 + 1;
        }
        return true;
    }
}
