

//size of ball 66

class Ball {

    field int x, y;          
    field int xi;
    field int k;
    field ConnectGame game;
    field int player;

    /** Constructs a new ball with the given initial location and wall locations. */
    constructor Ball new(int Ax, int Ay, ConnectGame Agame, int APlayer) { 
        let player = APlayer;//0 - black, 1 - white
        let game = Agame;
        let xi = 0;	
	    let x = Ax;		
	    let y = Ay;
        do show();
        return this;
    }

        method int getXi() {
	    return xi;
    }

    /** Deallocates the Ball's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Shows the ball. */
    method void show() {
        do Screen.setColor(true);
        do draw();
        if(player = 1) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x+1+3, y+1+3, x + 28-3, y + 28-3);
            do Screen.setColor(true);
        }  
        return;
    }

    /** Hides the ball. */
    method void hide() {
        do Screen.setColor(false);
	    do draw();
        return;
    }

    /** Draws the ball. */
    method void draw() {
        do Screen.drawRectangle(x+1, y+1, x + 28, y + 28);
	    return;
    }

    method void moveLeft() {
        if(xi>0) {
            let xi = xi - 1;
            let x = x - 35;
            do show();
        }
        return;
    }

    method void moveRight() {
        if(xi<6) {
            let xi = xi + 1;
            let x = x + 35;
            do show();
        }
        return;
    }

    method void moveDown() {
        if(game.getCountInColumn(xi)<6) {
            
            let k = 6-game.getCountInColumn(xi);
            let y = y + (35*k);
            do show();
        }
        return;
    }

  
    method void move(int direction) {

	    do hide();

        if (direction = 1) {
            do moveLeft();
        }
        else {
            if (direction = 2) {
                do moveRight();
            }
            else {
                if (direction = 3) {
                    do moveDown();
                }
            }
        }
	    do show();

	    return ;
    }

}
