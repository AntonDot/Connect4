function Ball.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 3
pop this 5
push argument 2
pop this 4
push constant 0
pop this 2
push argument 0
pop this 0
push argument 1
pop this 1
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.getXi 0
push argument 0
pop pointer 0
push this 2
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push this 5
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 1
add
push constant 3
add
push this 1
push constant 1
add
push constant 3
add
push this 0
push constant 28
add
push constant 3
sub
push this 1
push constant 28
add
push constant 3
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push constant 1
add
push this 1
push constant 1
add
push this 0
push constant 28
add
push this 1
push constant 28
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.moveLeft 0
push argument 0
pop pointer 0
push this 2
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
sub
pop this 2
push this 0
push constant 35
sub
pop this 0
push pointer 0
call Ball.show 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Ball.moveRight 0
push argument 0
pop pointer 0
push this 2
push constant 6
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
add
pop this 2
push this 0
push constant 35
add
pop this 0
push pointer 0
call Ball.show 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Ball.moveDown 0
push argument 0
pop pointer 0
push this 4
push this 2
call ConnectGame.getCountInColumn 2
push constant 6
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 6
push this 4
push this 2
call ConnectGame.getCountInColumn 2
sub
pop this 3
push this 1
push constant 35
push this 3
call Math.multiply 2
add
pop this 1
push pointer 0
call Ball.show 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.moveLeft 1
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Ball.moveRight 1
pop temp 0
goto IF_END1
label IF_FALSE1
push argument 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Ball.moveDown 1
pop temp 0
label IF_FALSE2
label IF_END1
label IF_END0
push pointer 0
call Ball.show 1
pop temp 0
push constant 0
return
